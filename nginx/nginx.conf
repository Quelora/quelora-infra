events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  server {
    listen 443 ssl;
    server_name _;

    ssl_certificate     /etc/nginx/certs/quelora.localhost.ar.pem;
    ssl_certificate_key /etc/nginx/certs/quelora.localhost.ar-key.pem;

    location / {
      proxy_pass http://node-demo:3001;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
  }

  server {
    listen 444 ssl;
    server_name _;

    ssl_certificate     /etc/nginx/certs/quelora.localhost.ar.pem;
    ssl_certificate_key /etc/nginx/certs/quelora.localhost.ar-key.pem;

    location / {
      proxy_pass http://quelora:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
  }

  server {
    listen 445 ssl;
    server_name _;

    ssl_certificate     /etc/nginx/certs/quelora.localhost.ar.pem;
    ssl_certificate_key /etc/nginx/certs/quelora.localhost.ar-key.pem;

    location / {
        proxy_pass http://dashboard:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Específicamente para WebSocket
    location /ws {
        proxy_pass http://dashboard:3002/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
  }

  # Redirección HTTP → HTTPS por defecto
  server {
    listen 80;
    return 301 https://$host$request_uri;
  }
}
